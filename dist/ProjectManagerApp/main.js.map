{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-project/add-project.component.css","webpack:///./src/app/add-project/add-project.component.html","webpack:///./src/app/add-project/add-project.component.ts","webpack:///./src/app/add-task/add-task.component.css","webpack:///./src/app/add-task/add-task.component.html","webpack:///./src/app/add-task/add-task.component.ts","webpack:///./src/app/add-user/add-user.component.css","webpack:///./src/app/add-user/add-user.component.html","webpack:///./src/app/add-user/add-user.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/project.service.ts","webpack:///./src/app/services/task.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/view-task/view-task.component.css","webpack:///./src/app/view-task/view-task.component.html","webpack:///./src/app/view-task/view-task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/shared/data-transfer.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".row-centered {\\n    text-align: center;\\n}\\n\\n.row-right {\\n    text-align: right;\\n    padding-right: 2%;\\n}\\n\\n.checkbox-padding {\\n    padding-left: 5px;\\n}\\n\\n.middleVert {\\n    padding-top: 7%;\\n}\\n\\n.middleVert1 {\\n    height: 20px;\\n}\\n\\n.text-danger {\\n    color: red;\\n}\\n\"","module.exports = \"<p-growl [(value)]=\\\"msgs\\\" [life]=\\\"3000\\\" [sticky]=\\\"false\\\"></p-growl>\\n<h1 class=\\\"h2\\\">Add Project</h1>\\n<div class=\\\"bd-callout bd-callout-warning\\\">\\n        <form [formGroup]=\\\"addProjectForm\\\" (ngSubmit)=\\\"addProjectSubmit()\\\" novalidate>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"projectNameControl\\\">Project:</label>\\n                        <div class=\\\"col-sm-7\\\">\\n                            <input class=\\\"form-control\\\" placeholder=\\\"Enter project name\\\" name=\\\"projectNameControl\\\" formControlName=\\\"projectNameControl\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div *ngIf=\\\"(addProjectForm.controls.projectNameControl.touched && !addProjectForm.controls.projectNameControl.valid)\\\">\\n                            <span class=\\\"glyphicon glyphicon-info-sign text-warning\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                            <p class=\\\"text-warning\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-5\\\"></div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"checkbox checkbox-padding\\\">\\n                            <label>\\n                                <input type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"checkDatesControl\\\"  (change)=\\\"handleChange($event)\\\" formControlName=\\\"checkDatesControl\\\">Set Start and End Date\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\"></div>\\n                </div>\\n                <div class=\\\"row\\\" *ngIf=\\\"addProjectForm.controls.checkDatesControl.value\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"startDate\\\">Start Date:</label>\\n                        <div class=\\\"col-md-8\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <p-calendar name=\\\"startDateControl\\\" formControlName=\\\"startDateControl\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div *ngIf=\\\"(addProjectForm.controls.startDateControl.touched && !addProjectForm.controls.startDateControl.valid)\\\">\\n                            <span class=\\\"glyphicon glyphicon-info-sign text-warning\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                            <p class=\\\"text-warning\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\" *ngIf=\\\"addProjectForm.controls.checkDatesControl.value\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"endDate\\\">End Date:</label>\\n                        <div class=\\\"col-md-8\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <p-calendar name=\\\"endDateControl\\\" formControlName=\\\"endDateControl\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div *ngIf=\\\"addProjectForm?.errors?.endDateLessThanStartDate\\\">\\n                            <span class=\\\"glyphicon glyphicon-info-sign text-warning\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                            <p class=\\\"text-warning\\\" style=\\\"display:inline;\\\">End date cannot be lower than start date.</p>\\n                        </div>\\n                        <div *ngIf=\\\"(addProjectForm.controls.endDateControl.touched && !addProjectForm.controls.endDateControl.valid)\\\">\\n                            <span class=\\\"glyphicon glyphicon-info-sign text-warning\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                            <p class=\\\"text-warning\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-8\\\">\\n                        <label class=\\\"control-label col-sm-3\\\">Priority:</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-1\\\">\\n                                    <h4 class=\\\"middleVert1\\\">0</h4>\\n                                </div>\\n                                <div class=\\\"col-sm-7\\\">\\n                                    <div class=\\\"middleVert\\\"></div>\\n                                    <p-slider formControlName=\\\"priorityControl\\\" [min]=\\\"0\\\" [max]=\\\"30\\\" [step]=\\\"1\\\" [style]=\\\"{'width':'200px'}\\\"></p-slider>\\n                                </div>\\n                                <div class=\\\"col-sm-1\\\">\\n                                    <h4 class=\\\"middleVert1\\\">30</h4>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <input class=\\\"form-control\\\" readonly name=\\\"priorityDisplayControl\\\" formControlName=\\\"priorityDisplayControl\\\" value=\\\"{{addProjectForm.controls.priorityControl.value}}\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div *ngIf=\\\"(addProjectForm.controls.priorityControl.touched && !addProjectForm.controls.priorityControl.valid)\\\">\\n                            <span class=\\\"glyphicon glyphicon-info-sign text-warning\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                            <p class=\\\"text-warning\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-8\\\">\\n                        <label class=\\\"control-label col-sm-3\\\">Manager:</label>\\n                        <div class=\\\"col-sm-5\\\">\\n                            <input class=\\\"form-control\\\" placeholder=\\\"Select the Manager\\\" readonly name=\\\"selectedManagerNameControl\\\" formControlName=\\\"selectedManagerNameControl\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchManagersModal\\\">Search</button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\"></div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <div class=\\\"col-md-4\\\"></div>\\n                        <div class=\\\"col-md-9\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-md\\\" [disabled]=\\\"addProjectForm.invalid\\\" [ngClass]=\\\"{\\n                                'btn-default': addOrUpdateBtn == 'Add',\\n                                'btn-primary': addOrUpdateBtn == 'Update'\\n                            }\\\">{{addOrUpdateBtn}}</button>&nbsp;\\n                            <button type=\\\"button\\\" class=\\\"btn btn-md btn-warning\\\" (click)=\\\"addProjectReset()\\\">Reset</button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\"></div>\\n                </div>\\n            </form> </div>\\n   \\n    <h1 class=\\\"h2\\\">View Project</h1>\\n                        <p-dataTable [value]=\\\"projectsList\\\">\\n                            <p-column field=\\\"projectId\\\" header=\\\"Project ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"\\n                            [style]=\\\"{ 'width' : '10%' }\\\"></p-column>\\n                            <p-column field=\\\"projectName\\\" header=\\\"Project Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"startDate\\\" header=\\\"Start Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n                                <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                    <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                                </ng-template>\\n                            </p-column>\\n                            <p-column field=\\\"endDate\\\" header=\\\"End Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n                                <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                    <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                                </ng-template>\\n                            </p-column>\\n                            <p-column field=\\\"priority\\\" header=\\\"Priority\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"\\n                            [style]=\\\"{ 'width' : '10%' }\\\"></p-column>\\n                            <p-column field=\\\"projectManager.firstName\\\" header=\\\"Manager Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n                                <ng-template let-project=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <span>{{ project.projectManager.firstName + ' ' + project.projectManager.lastName }}</span>\\n                                </ng-template>\\n                            </p-column>\\n                            <p-column [style]=\\\"{ 'width' : '25%' }\\\">\\n                                <ng-template let-project=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"updateProject(project)\\\">Update</button>&nbsp;\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"suspendProject(project)\\\"\\n                                    [disabled]=\\\"project.status=='Suspended'\\\">Suspend</button>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n                   \\n<br/>\\n<!-- Modal - Search Managers -->\\n<div id=\\\"searchManagersModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <!-- Modal content-->\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Search Managers</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-1\\\"></div>\\n                    <div class=\\\"col-md-10\\\">\\n                        <p-dataTable [value]=\\\"usersList\\\">\\n                            <p-column field=\\\"userId\\\" header=\\\"User ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"firstName\\\" header=\\\"First Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"lastName\\\" header=\\\"Last Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"employeeId\\\" header=\\\"Employee ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column>\\n                                <ng-template let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" id=\\\"assignManager\\\" (click)=\\\"assignManager(user.userId, user.firstName + ' ' + user.lastName)\\\"\\n                                        data-dismiss=\\\"modal\\\">Assign</button>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\"></div>\\n                </div>\\n                <br>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\" #cd></p-confirmDialog>\\n\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Message, ConfirmationService } from 'primeng/api';\nimport { DatePipe } from '@angular/common';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { Project } from 'src/app/entities/project';\nimport { User } from 'src/app/entities/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n    templateUrl: './add-project.component.html',\n    styleUrls: ['./add-project.component.css'],\n    providers: [ProjectService,ConfirmationService,DatePipe]\n})\n\nexport class AddProjectComponent implements OnInit {\n    msgs: Message[] = [];\n    projectsList: Project[];\n    usersList: User[];\n    public addOrUpdateBtn: string = 'Add';\n    public addProjectForm: FormGroup;\n\n    constructor(private formBuilder: FormBuilder, private projectService: ProjectService, \n        private userService: UserService, private confirmationService: ConfirmationService, \n        private datePipe: DatePipe) { }\n\n    ngOnInit() {\n        this.formInit();\n        this.getUsers();\n        this.getAllProjects();\n    }\n    formInit()\n    {\n            this.addProjectForm = this.formBuilder.group({\n            projectIdControl: [0, Validators.required],\n            projectNameControl: [null, Validators.required],\n            checkDatesControl: [false],\n            startDateControl: [this.datePipe.transform(Date.now(),'MM/dd/yyyy').toString(),Validators.required],\n            endDateControl: [this.datePipe.transform(Date.now()+86400000,'MM/dd/yyyy').toString(),Validators.required],\n            status: [\"Active\"],\n            priorityControl: [null, Validators.required],\n            selectedManagerIdControl: [null, Validators.required],\n            selectedManagerNameControl: [null, Validators.required],\n            priorityDisplayControl: [null]\n        },\n        {validator: this.endDateAfterOrEqualValidator});\n        this.handleChange(null);\n\n    }\n\n    getUsers() {\n        this.usersList = [];\n        this.userService.getAllUsers()\n            .subscribe(data => { this.usersList = data; });\n    }\n    getAllProjects() {\n        this.projectsList = [];\n        this.projectService.getAllProjects()\n            .subscribe(\n                data => { this.projectsList = data; \n                });\n    }\n\n\n    updateProject(project: Project) {\n        this.addOrUpdateBtn = 'Update';\n        this.addProjectForm = this.formBuilder.group({\n            projectIdControl: [project.projectId, Validators.required],\n            projectNameControl: [project.projectName, Validators.required],\n            checkDatesControl: [project.endDate === null && project.startDate === null ? false : true],\n            startDateControl: [project.startDate===null?null: this.datePipe.transform(project.startDate,'MM/dd/yyyy').toString(),Validators.required],\n            endDateControl:  [project.endDate===null?null:this.datePipe.transform(project.endDate,'MM/dd/yyyy').toString(),Validators.required],\n            status: [project.status],\n            priorityControl: [project.priority, Validators.required],\n            selectedManagerIdControl: [project.managerId, Validators.required],\n            selectedManagerNameControl: [project.projectManager.firstName + ' ' + project.projectManager.lastName, Validators.required],\n            priorityDisplayControl: [null]\n        }, {validator: this.endDateAfterOrEqualValidator});\n        this.handleChange(null);\n\n    }\n\n    showMessage(status: boolean, message: string) {\n        this.msgs = [];\n        if (status === true) {\n            this.msgs.push({ severity: 'success', summary: \"Success\", detail: message });\n        }\n        else {\n            this.msgs.push({ severity: 'error', summary: \"Error\", detail: message });\n\n        }\n        this.addProjectReset();\n    }\n\n    addProjectReset() {\n        this.addProjectForm.reset();\n        this.formInit();\n        this.addOrUpdateBtn = 'Add';\n    }\n    \n\n    addProjectSubmit() {\n        let _project={\n            projectId: this.addProjectForm.get('projectIdControl').value,\n            endDate: this.addProjectForm.get('checkDatesControl').value == true ? this.addProjectForm.get('endDateControl').value : null,\n            startDate: this.addProjectForm.get('checkDatesControl').value == true ? this.addProjectForm.get('startDateControl').value : null,\n            managerId: this.addProjectForm.get('selectedManagerIdControl').value,\n            priority: this.addProjectForm.get('priorityControl').value,\n            projectName: this.addProjectForm.get('projectNameControl').value,\n            status: this.addProjectForm.get('status').value,\n            projectManager: null\n        };\n        if( _project.projectId == 0) {\n            this.projectService.addProject(_project)\n            .subscribe(data => {\n                this.getAllProjects();\n                this.showMessage(true, 'Addes Successfully');           \n            });\n        }\n        else {\n            this.projectService.updateProject(_project)\n            .subscribe(data => {\n                this.getAllProjects();\n                this.showMessage(true, 'Updated Successfully');           \n            });\n        }\n    }\n\n    assignManager(managerId: number, managerName: string) {\n\n        this.addProjectForm.patchValue({\n            selectedManagerIdControl: managerId,\n            selectedManagerNameControl: managerName\n        });\n    }\n\n    handleChange(event) {\n        \n        if (this.addProjectForm.get('checkDatesControl').value)\n        {\n            this.enableControls();\n        } \n        else{\n            this.disableControls();\n        }\n    }\n\n    disableControls() {\n       \n        this.addProjectForm.get('endDateControl').disable();\n        this.addProjectForm.get('startDateControl').disable();\n    }\n\n    enableControls() {\n        this.addProjectForm.get('endDateControl').enable();\n        this.addProjectForm.get('startDateControl').enable();\n        \n    }\n\n    suspendProject(project: Project) {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to suspend project : ' + project.projectName + '?',\n            accept: () => {\n                project.status=\"Suspended\";\n                this.projectService.updateProject(project)\n                    .subscribe(data => { this.showMessage(true, 'Updated Successfully!'); });\n            }\n        });\n    }\n\n    endDateAfterOrEqualValidator(formGroup): any {\n        var startDateTimestamp, endDateTimestamp;\n        for(var controlName in formGroup.controls) {\n          if(controlName.indexOf(\"startDateControl\") !== -1) {\n            startDateTimestamp = Date.parse(formGroup.controls[controlName].value);\n          }\n          if(controlName.indexOf(\"endDateControl\") !== -1) {\n            endDateTimestamp = Date.parse(formGroup.controls[controlName].value);\n          }\n        }\n        return (endDateTimestamp < startDateTimestamp) ? { endDateLessThanStartDate: true } : null;\n      }\n}","module.exports = \".middleVert1 {\\r\\n    height: 12px;\\r\\n}\\r\\n\\r\\n.text-danger {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\n\\n<h1 class=\\\"h2\\\">{{formMode}}</h1>\\n<div class=\\\"col-md-10\\\">\\n<form [formGroup]=\\\"addTaskForm\\\" (ngSubmit)=\\\"addTaskSubmit()\\\" *ngIf=\\\"loaded\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"!isParentTask\\\">\\n                <div class=\\\"col-md-2\\\"></div>\\n                <div class=\\\"form-group col-md-8\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\">\\n                            <label class=\\\"control-label\\\" for=\\\"SelectedProjectName\\\">Project:</label>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <input class=\\\"form-control\\\" placeholder=\\\"Select Project\\\" readonly name=\\\"SelectedProjectName\\\" formControlName=\\\"SelectedProjectName\\\">\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchProjectsModal\\\">Search</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                    <div *ngIf=\\\"(!addTaskForm.controls.SelectedProjectName.valid)\\\">\\n                        <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                        <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                    </div>\\n                </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                            <label class=\\\"control-label\\\" for=\\\"TaskName\\\">Task:</label>\\n                        </div>\\n                        <div class=\\\"col-md-8\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"TaskName\\\" placeholder=\\\"Enter task name\\\" formControlName=\\\"TaskName\\\">\\n                        </div>\\n                    </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"(addTaskForm.controls.TaskName.touched && !addTaskForm.controls.TaskName.valid)\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\"></div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"checkbox checkbox-padding\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"IsParentTask\\\" (change)=\\\"handleParentChange($event)\\\" \\n                        formControlName=\\\"IsParentTask\\\">Parent Task</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"!isParentTask\\\">\\n            <div class=\\\"col-md-2\\\"></div>\\n            <div class=\\\"form-group col-md-8\\\">\\n                    <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-3\\\">\\n                                    <label class=\\\"control-label\\\">Priority:</label>\\n                            </div>\\n                            <div class=\\\"col-sm-9\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-sm-1\\\">\\n                                            <h4 class=\\\"middleVert1\\\">0</h4>\\n                                        </div>\\n                                        <div class=\\\"col-sm-8\\\">\\n                                            <div class=\\\"middleVert1\\\"></div>\\n                                            <p-slider formControlName=\\\"Priority\\\" [min]=\\\"0\\\" [max]=\\\"30\\\" [step]=\\\"1\\\" [style]=\\\"{'width':'200px'}\\\"></p-slider>\\n                                        </div>\\n                                        <div class=\\\"col-sm-1\\\">\\n                                            <h4 class=\\\"middleVert1\\\">30</h4>\\n                                        </div>\\n                                        <div class=\\\"col-sm-4\\\">\\n                                            <input class=\\\"form-control\\\" readonly formControlName=\\\"PriorityDisplay\\\" value=\\\"{{addTaskForm.controls.Priority.value}}\\\">\\n                                        </div>\\n                                    </div>\\n                            </div>\\n                    </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"(addTaskForm.controls.Priority.touched && !addTaskForm.controls.Priority.valid)\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!isParentTask\\\">\\n            <div class=\\\"col-md-2\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                            <label class=\\\"control-label\\\" for=\\\"ParentTask\\\">Parent Task:</label>\\n                        </div>\\n                        <div class=\\\"col-md-8\\\">\\n                            <select class=\\\"form-control text-left\\\" style=\\\"min-width:50%\\\" id=\\\"ParentTask\\\" formControlName=\\\"ParentTask\\\">\\n                                <option [ngValue]=null>Select </option>\\n                                <option *ngFor=\\\"let parent of parentTasks\\\" [ngValue]=\\\"parent.parentId\\\">\\n                                    {{parent.parentTaskName}}\\n                                </option>\\n                            </select>\\n                        </div>\\n                    </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"(addTaskForm.controls.ParentTask.touched && !addTaskForm.controls.ParentTask.valid)\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!isParentTask\\\">\\n            <div class=\\\"col-md-2\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"startDate\\\">Start Date:</label>\\n                        </div>\\n                        <div class=\\\"col-md-8\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <p-calendar name=\\\"StartDate\\\" formControlName=\\\"StartDate\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                                </div>\\n                        </div>\\n                    </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"(addTaskForm.controls.StartDate.touched && !addTaskForm.controls.StartDate.valid)\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"!isParentTask\\\">\\n            <div class=\\\"col-md-2\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                    <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                                    <label class=\\\"control-label\\\" for=\\\"EndDate\\\">End Date:</label>\\n                            </div>\\n                            <div class=\\\"col-md-8\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                            <p-calendar name=\\\"EndDate\\\" formControlName=\\\"EndDate\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                                        </div>\\n                            </div>\\n                        </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n\\n                <div *ngIf=\\\"addTaskForm?.errors?.endDateLessThanStartDate\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">End date cannot be lower than start date.</p>\\n                </div>\\n                <div *ngIf=\\\"(addTaskForm.controls.EndDate.touched && !addTaskForm.controls.EndDate.valid)\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!isParentTask\\\">\\n                <div class=\\\"col-md-2\\\"></div>\\n                <div class=\\\"form-group col-md-8\\\">\\n                        <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-3\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"SelectedUserName\\\">User:</label>\\n                                </div>\\n                                <div class=\\\"col-md-5\\\">\\n                                        <input class=\\\"form-control\\\" placeholder=\\\"Select User\\\" readonly name=\\\"SelectedUserName\\\" formControlName=\\\"SelectedUserName\\\">\\n                                </div>\\n                                <div class=\\\"col-md-3\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchUsersModal\\\">Search</button>\\n                                </div>\\n                            </div>\\n                 </div>\\n                <div class=\\\"col-md-2\\\">\\n                    <div *ngIf=\\\"(!addTaskForm.controls.SelectedUserName.valid)\\\">\\n                        <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                        <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                    </div>\\n                </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"col-md-4\\\"></div>\\n                <div class=\\\"col-md-8\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-md btn-primary\\\">{{btnMode}}</button>\\n                    &nbsp;\\n                    <button type=\\\"button\\\" (click)=\\\"clearData()\\\" class=\\\"btn btn-md btn-danger\\\">Reset</button>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\"></div>\\n        </div>\\n    </form>\\n</div>\\n<div id=\\\"searchUsersModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Search Users</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-1\\\"></div>\\n                    <div class=\\\"col-md-10\\\">\\n                        <p-dataTable [value]=\\\"usersList\\\">\\n                            <p-column field=\\\"userId\\\" header=\\\"User ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"firstName\\\" header=\\\"First Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"lastName\\\" header=\\\"Last Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"employeeId\\\" header=\\\"Employee ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column>\\n                                <ng-template let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"assignUser(user.userId, user.firstName + ' ' + user.lastName)\\\"\\n                                        data-dismiss=\\\"modal\\\">Assign</button>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\"></div>\\n                </div>\\n                <br>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div id=\\\"searchProjectsModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Search Projects</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-1\\\"></div>\\n                        <div class=\\\"col-md-10\\\">\\n                            <p-dataTable [value]=\\\"projectsList\\\">\\n                                <p-column field=\\\"projectName\\\" header=\\\"Project Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                                <p-column field=\\\"startDate\\\" header=\\\"Start Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n                                    <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                        <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                                    </ng-template>\\n                                </p-column>\\n                                <p-column field=\\\"endDate\\\" header=\\\"End Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n                                    <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                        <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                                    </ng-template>\\n                                </p-column>\\n                                <p-column field=\\\"priority\\\" header=\\\"Priority\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                                <p-column>\\n                                    <ng-template let-project=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"assignProject(project.projectId, project.projectName)\\\"\\n                                            data-dismiss=\\\"modal\\\">Assign</button>\\n                                    </ng-template>\\n                                </p-column>\\n                            </p-dataTable>\\n                        </div>\\n                        <div class=\\\"col-md-1\\\"></div>\\n                    </div>\\n                    <br>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ParentTask, Task } from 'src/app/entities/task';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { TaskService } from 'src/app/services/task.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { isDefaultChangeDetectionStrategy } from '@angular/core/src/change_detection/constants';\nimport { ViewChild } from '@angular/core/src/metadata/di';\nimport { DataTransferService } from 'src/shared/data-transfer.service';\nimport { Project } from 'src/app/entities/project';\nimport { User } from 'src/app/entities/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { forkJoin } from 'rxjs/internal/observable/forkJoin';\n\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css'],\n  providers: [TaskService, DatePipe, DataTransferService]\n})\nexport class AddTaskComponent implements OnInit {\n  parentTasks: ParentTask[]=[];\n  taskId: Number = 0;\n  formMode: String = 'Add Task';\n  btnMode: String = 'Add';\n  addTaskForm: FormGroup;\n  errorMessage: any;\n  isParentTask: boolean = false;\n  loaded: boolean=false;\n  task : Task;\n  projectsList: Project[]=[];\n  usersList:User[]=[];\n\n  constructor\n  (\n    private router: Router,\n    private taskService: TaskService,\n    private datePipe: DatePipe,\n    private route: ActivatedRoute,\n    private dataTransferService: DataTransferService,\n    private userService: UserService,\n    private projectService: ProjectService \n  ) { }\n\n  ngOnInit() {\n    let usersObservable = this.userService.getAllUsers();\n    let projectsObservable = this.projectService.getAllProjects();\n    forkJoin([usersObservable, projectsObservable]).subscribe(results => {\n      this.usersList = results[0];\n      this.projectsList = results[1];\n    });\n    \n    this.taskService.getAllParentTasks()\n      .subscribe(data => {\n        this.parentTasks = data;       \n        this.setupForm();\n      },\n      error => {\n        this.errorMessage = <any>error;\n      });\n  }\n\n  setupForm() {\n    if (this.router.url.toLowerCase() === '/edittask' ) {\n      if (this.dataTransferService.task !== null) {\n        this.editMode();\n        this.onFormEditInit(this.dataTransferService.task);\n      }\n      else{\n        this.router.navigate(['/addtask']);\n      }\n    }\n    else {\n        this.onFormInit();\n    }\n  }\n  addTaskSubmit() {\n    this.task = {\n      taskId   : this.addTaskForm.controls.TaskId.value,\n      taskName : this.addTaskForm.controls.TaskName.value,\n      parentId : this.addTaskForm.controls.ParentTask.value == null ? 0 : this.addTaskForm.controls.ParentTask.value,\n      priority : this.addTaskForm.controls.Priority.value ==null ? 0 : this.addTaskForm.controls.Priority.value,\n      startDate: this.addTaskForm.controls.StartDate.value == null ? Date.now() : this.addTaskForm.controls.StartDate.value,\n      endDate  : this.addTaskForm.controls.EndDate.value == null ? Date.now() : this.addTaskForm.controls.EndDate.value,\n      status   : true,\n      parent   : null,\n      projectId: this.addTaskForm.controls.SelectedProjectId.value,\n      userId   : this.addTaskForm.controls.SelectedUserId.value,\n      project  : null,\n      user     : null\n    }\n\n    if(this.btnMode == 'Add')\n    {\n      this.taskService.addTask(this.task)\n      .subscribe(data => {\n        this.router.navigate(['/viewtask']);\n      },\n      error => {\n        this.errorMessage = <any>error;\n      });\n    }\n    else\n    {\n      this.taskService.updateTask(this.task)\n      .subscribe(data => {\n        this.router.navigate(['/viewtask']);\n      },\n      error => {\n        this.errorMessage = <any>error;\n      });\n    }\n  }\n\n  resetData()\n  {\n    this.addTaskForm.controls.TaskName.reset();\n    this.addTaskForm.controls.IsParentTask.reset();\n    this.addTaskForm.controls.IsParentTask.enable();\n    this.addTaskForm.controls.Priority.reset();\n    this.addTaskForm.controls.PriorityDisplay.reset();\n    this.addTaskForm.controls.ParentTask.reset();\n    this.addTaskForm.controls.StartDate.setValue(this.datePipe.transform(Date.now(), 'MM/dd/yyyy').toString());\n    this.addTaskForm.controls.EndDate.setValue(this.datePipe.transform(Date.now() + 86400000, 'MM/dd/yyyy').toString());\n    this.isParentTask=false;\n    this.addTaskForm.controls.SelectedProjectId.reset();\n    this.addTaskForm.controls.SelectedUserId.reset();\n    this.addTaskForm.controls.SelectedProjectName.reset();\n    this.addTaskForm.controls.SelectedUserName.reset();\n  }\n\n  clearData()\n  {\n    if(this.btnMode === 'Update')\n    {\n      this.router.navigate(['/viewtask']);\n    }\n    else\n    {\n      this.resetData();\n    }\n  }\n\n  handleParentChange(event)\n  {\n      if (this.addTaskForm.get('IsParentTask').value==false)\n      {\n          this.isParentTask=false;\n      } \n      else{\n        this.isParentTask=true;\n      }\n  }\n\n  editMode() {\n    this.formMode = 'Edit Task';    \n    this.btnMode = 'Update';\n  }\n\n  addMode() {\n    this.formMode = 'Add Task';\n    this.btnMode = 'Add';\n  }\n\n  onFormInit() {\n    this.addTaskForm = new FormGroup({\n      'TaskId': new FormControl(0),\n      'TaskName': new FormControl(null, [Validators.required]),\n      'IsParentTask': new FormControl(null, [Validators.required]),\n      'Priority': new FormControl(null, [Validators.required]),\n      'PriorityDisplay': new FormControl(null),\n      'ParentTask': new FormControl(null, [Validators.required]),\n      'StartDate': new FormControl(this.datePipe.transform(Date.now(), 'MM/dd/yyyy').toString(), [Validators.required]),\n      'EndDate': new FormControl(this.datePipe.transform(Date.now() + 86400000, 'MM/dd/yyyy').toString(), [Validators.required]),\n      'SelectedProjectId': new FormControl(null, [Validators.required]),\n      'SelectedUserId': new FormControl(null, [Validators.required]),\n      'SelectedProjectName': new FormControl(null, [Validators.required]),\n      'SelectedUserName': new FormControl(null, [Validators.required]),\n    }, { validators: [this.endDateValidator] });\n   \n    this.addMode();\n    this.clearData();\n    this.loaded=true;\n  }\n\n  onFormEditInit(task: Task) {\n    this.addTaskForm = new FormGroup({\n      'TaskId': new FormControl(task.taskId),\n      'TaskName': new FormControl(task.taskName, [Validators.required]),\n      'IsParentTask': new FormControl(task.parentId === 0 ? true : false, [Validators.required]),\n      'Priority': new FormControl(task.priority, [Validators.required]),\n      'PriorityDisplay': new FormControl(task.priority, [Validators.required]),\n      'ParentTask': new FormControl(task.parentId !== 0 ? task.parent.parentId : null, [Validators.required]),\n      'StartDate': new FormControl(task.startDate != null ? this.datePipe.transform(task.startDate, 'MM/dd/yyyy').toString() : null, [Validators.required]),\n      'EndDate': new FormControl(task.endDate != null ? this.datePipe.transform(task.endDate, 'MM/dd/yyyy').toString() : null, [Validators.required]),\n      'SelectedProjectId': new FormControl(task.parentId !== 0 ? task.projectId : null, [Validators.required]),\n      'SelectedUserId': new FormControl(task.parentId !== 0 ? task.userId : null, [Validators.required]),\n      'SelectedProjectName': new FormControl(task.parentId !== 0 ? task.project.projectName : null, [Validators.required]),\n      'SelectedUserName': new FormControl(task.parentId !== 0 ? task.user.firstName + ' ' + task.user.lastName : null, [Validators.required]),\n    }, { validators: [this.endDateValidator] });\n    this.loaded=true;\n    this.addTaskForm.controls.IsParentTask.disable();\n    if (task.parentId !== 0)\n    {\n        this.isParentTask=false;\n    } \n    else{\n      this.isParentTask=true;\n    }\n  }\n\n  assignUser(userId: number, userName: string) {\n    this.addTaskForm.patchValue({\n      SelectedUserId: userId,\n      SelectedUserName: userName\n    });\n  }\n\n  assignProject(projectId: number, projectName: string) {\n    this.addTaskForm.patchValue({\n      SelectedProjectId: projectId,\n      SelectedProjectName: projectName\n    });\n  }\n\n  endDateValidator(formGroup): any {\n    var startDateTimestamp, endDateTimestamp;\n    for (var controlName in formGroup.controls) {\n      if (controlName.indexOf(\"StartDate\") !== -1) {\n        startDateTimestamp = Date.parse(formGroup.controls[controlName].value);\n      }\n      if (controlName.indexOf(\"EndDate\") !== -1) {\n        endDateTimestamp = Date.parse(formGroup.controls[controlName].value);\n      }\n    }\n    return (endDateTimestamp < startDateTimestamp) ? { endDateLessThanStartDate: true } : null;\n  }\n\n}\n","module.exports = \"\\r\\n\"","module.exports = \"\\n<p-growl [(value)]=\\\"msgs\\\" [life]=\\\"3000\\\" [sticky]=\\\"false\\\"></p-growl>\\n<h1 class=\\\"h2\\\">Add user</h1>\\n<form [formGroup]=\\\"addUserForm\\\" (ngSubmit)=\\\"addUserSubmit()\\\" novalidate>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label class=\\\"control-label col-sm-4\\\" for=\\\"firstNameControl\\\">First Name:</label>\\n                <div class=\\\"col-sm-6\\\">\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Enter first name\\\" name=\\\"firstNameControl\\\" formControlName=\\\"firstNameControl\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"(addUserForm.controls.firstNameControl.touched && !addUserForm.controls.firstNameControl.valid)\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label class=\\\"control-label col-sm-4\\\" for=\\\"lastNameControl\\\">Last Name:</label>\\n                <div class=\\\"col-sm-6\\\">\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Enter last name\\\" name=\\\"lastNameControl\\\" formControlName=\\\"lastNameControl\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"(addUserForm.controls.lastNameControl.touched && !addUserForm.controls.lastNameControl.valid)\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label class=\\\"control-label col-sm-4\\\" for=\\\"employeeIdControl\\\">Employee ID:</label>\\n                <div class=\\\"col-sm-6\\\">\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Enter Employee ID\\\" name=\\\"employeeIdControl\\\" formControlName=\\\"employeeIdControl\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"(addUserForm.controls.employeeIdControl.touched && !addUserForm.controls.employeeIdControl.valid)\\\">\\n                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                </div>\\n            </div>\\n        </div>\\n       \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"col-md-4\\\"></div>\\n                <div class=\\\"col-md-9\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success btn-md\\\" [disabled]=\\\"addUserForm.invalid\\\" [ngClass]=\\\"{\\n                        'btn-primary': addOrUpdateBtn == 'Add',\\n                        'btn-default': addOrUpdateBtn == 'Update'\\n                    }\\\">{{addOrUpdateBtn}}</button>&nbsp;\\n                    <button type=\\\"button\\\" class=\\\"btn btn-md btn-danger\\\" (click)=\\\"onReset()\\\">Reset</button>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-2\\\"></div>\\n        </div>\\n    </form>\\n    <h1 class=\\\"h2\\\">View users</h1>\\n    <div class=\\\"col-md-8\\\">\\n    <p-dataTable [value]=\\\"usersList\\\">\\n            <p-column field=\\\"employeeId\\\" header=\\\"Employee ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n            <p-column field=\\\"firstName\\\" header=\\\"First Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n            <p-column field=\\\"lastName\\\" header=\\\"Last Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n   \\n            <p-column>\\n                <ng-template let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onEditClick(user)\\\" aria-label=\\\"Left Align\\\">\\n                        <span class=\\\"fa fa-edit fa-lg\\\" aria-hidden=\\\"true\\\" ></span>\\n                    </button>\\n                    &nbsp;\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"confirmDelete(user)\\\" aria-label=\\\"Left Align\\\">\\n                        <span class=\\\"fa fa-trash-o fa-lg\\\" aria-hidden=\\\"true\\\"></span>\\n                    </button>\\n                </ng-template>\\n            </p-column>\\n        </p-dataTable>\\n    </div>\\n    <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\" #cd ></p-confirmDialog>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ConfirmationService, Message } from 'primeng/api';\nimport { User } from 'src/app/entities/user';\nimport { FormGroup } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css'],\n  providers: [UserService, ConfirmationService]\n})\nexport class AddUserComponent implements OnInit {\n    cd: any;\n    msgs: Message[] = [];\n    usersList: User[];\n    public addOrUpdateBtn: string = 'Add';\n    public addUserForm: FormGroup;\n\n    constructor(private formBuilder: FormBuilder, private userService: UserService, \n      private confirmationService: ConfirmationService) { }\n\n    ngOnInit() {\n        this.formInit();\n        this.getAllUsers();\n    }\n\n    formInit()\n    {\n      this.addUserForm = this.formBuilder.group({\n      userIdControl: [0, Validators.required],\n      firstNameControl: [null, Validators.required],\n      lastNameControl: [null, Validators.required],\n      employeeIdControl: [null, Validators.required],\n      projectIdControl:[null],\n      taskIdControl:[null]\n      });\n    }\n\n    onReset() {\n      this.addUserForm.reset();\n      this.formInit();\n      this.addOrUpdateBtn = 'Add';\n    }\n \n   onEditClick(user: User) {\n      this.addOrUpdateBtn = 'Update';\n      this.addUserForm = this.formBuilder.group({\n      userIdControl: [user.userId, Validators.required],\n      firstNameControl: [user.firstName, Validators.required],\n      lastNameControl: [user.lastName, Validators.required],\n      employeeIdControl: [user.employeeId, Validators.required],\n      projectIdControl: [user.projectId],\n      taskIdControl: [user.taskId]\n    });\n  }\n\n  addUserSubmit() {\n    let _user={\n      userId: this.addUserForm.get('userIdControl').value,\n      firstName: this.addUserForm.get('firstNameControl').value,\n      lastName: this.addUserForm.get('lastNameControl').value,\n      employeeId: this.addUserForm.get('employeeIdControl').value,\n      taskId: this.addUserForm.get('taskIdControl').value,\n      projectId: this.addUserForm.get('projectIdControl').value,\n      userProject: null,\n      userTask: null,\n      isDeleted: false\n    };\n      this.addUser(_user);\n  \n  }\n\n  addUser(user : User)\n  {\n    if( user.userId == 0) {\n        this.userService.addUser(user)\n        .subscribe(data => {\n            this.getAllUsers();\n            this.showMessage(true, 'Added Successfully');           \n        });\n    }\n    else {\n        this.userService.updateUser(user)\n        .subscribe(data => {\n            this.getAllUsers();\n            this.showMessage(true, 'Updated Successfully');           \n        });\n      }\n  }\n  \n  updateUser(user: User) {\n      this.userService.updateUser(user)\n          .subscribe(data => {\n              this.showMessage(true,'Updated Successfully');\n          });\n  }\n\n  showMessage(status: boolean, message: string) {\n      this.msgs=[];\n      if (status === true) {\n          this.msgs.push({ severity: 'success', summary: \"Success\", detail: message});\n      }\n      else {\n          this.msgs.push({ severity: 'error', summary: \"Error\", detail: message });\n\n      }\n      this.getAllUsers();\n      this.onReset();\n  }\n\n  getAllUsers() {\n      this.userService.getAllUsers()\n          .subscribe(data => {   \n            this.usersList = data; \n          });\n  }\n\n  confirmDelete(user: User) {\n      this.confirmationService.confirm({\n          message: 'Are you sure that you want to delete user : ' + user.employeeId + '?',\n          accept: () => {\n              user.isDeleted = true;\n              this.userService.updateUser(user)\n              .subscribe(data => {\n                  this.showMessage(true,'Deleted Successfully');\n              });            \n            }\n      });\n  }\n}\n","module.exports = \".error {\\n    font-size: 13px;\\n    color: #c7254e;\\n    background: #f9f2f4;\\n    border-radius: 3px;\\n    padding: 15px;\\n    margin: -26px 0 15px;\\n  }\\n  .navbar-inverse {    \\n    border-color: #1f89ce;\\n}\\n  .navbar-inverse .navbar-nav>li>a {\\n    color: #f6f7f9;\\n}\\n  .navbar-inverse .navbar-brand {\\n  color: #f6f7f9;\\n}\\n\\n\\n\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-static-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Project Manager</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n    \\n    </ul>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <nav class=\\\"nav navbar-nav navbar-header\\\">\\n      <div class=\\\"nav navbar-nav\\\">\\n        <ul class=\\\"nav navbar-nav\\\">          \\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/addproject\\\" routerLinkActive=\\\"active\\\">\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-file\\\"><path d=\\\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\\\"></path><polyline points=\\\"13 2 13 9 20 9\\\"></polyline></svg>\\n              Add Project\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/adduser\\\" routerLinkActive=\\\"active\\\">\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-users\\\"><path d=\\\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\\\"></path><circle cx=\\\"9\\\" cy=\\\"7\\\" r=\\\"4\\\"></circle><path d=\\\"M23 21v-2a4 4 0 0 0-3-3.87\\\"></path><path d=\\\"M16 3.13a4 4 0 0 1 0 7.75\\\"></path></svg>\\n              Add User\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/addtask\\\" routerLinkActive=\\\"active\\\">\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-bar-chart-2\\\"><line x1=\\\"18\\\" y1=\\\"20\\\" x2=\\\"18\\\" y2=\\\"10\\\"></line><line x1=\\\"12\\\" y1=\\\"20\\\" x2=\\\"12\\\" y2=\\\"4\\\"></line><line x1=\\\"6\\\" y1=\\\"20\\\" x2=\\\"6\\\" y2=\\\"14\\\"></line></svg>\\n              Add Task\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/viewtask\\\" routerLinkActive=\\\"active\\\">\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-layers\\\"><polygon points=\\\"12 2 2 7 12 12 22 7 12 2\\\"></polygon><polyline points=\\\"2 17 12 22 22 17\\\"></polyline><polyline points=\\\"2 12 12 17 22 12\\\"></polyline></svg>\\n              View Task\\n            </a>\\n          </li>\\n        </ul>\\n\\n      </div>\\n    </nav>\\n\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\"><div class=\\\"chartjs-size-monitor\\\" style=\\\"position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;\\\"><div class=\\\"chartjs-size-monitor-expand\\\" style=\\\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\\\"><div style=\\\"position:absolute;width:1000000px;height:1000000px;left:0;top:0\\\"></div></div><div class=\\\"chartjs-size-monitor-shrink\\\" style=\\\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\\\"><div style=\\\"position:absolute;width:200%;height:200%;left:0; top:0\\\"></div></div></div>\\n      <div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\\\">\\n            \\n        <router-outlet></router-outlet>\\n      </div>\\n    </main>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Task Manager';\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {DataTableModule} from 'primeng/datatable';\nimport {GrowlModule} from 'primeng/growl';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {SliderModule} from 'primeng/slider';\nimport {CalendarModule} from 'primeng/calendar';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport { TaskService } from './services/task.service';\nimport { ViewTaskComponent } from './view-task/view-task.component';\nimport { Interceptor, fakeBackendProvider } from './interceptor/interceptor';\nimport { DataTransferService } from 'src/shared/data-transfer.service';\nimport { AddProjectComponent } from './add-project/add-project.component';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { AddUserComponent } from './add-user/add-user.component';\n\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/viewtask', pathMatch: 'full' },\n  { path: 'addtask', component: AddTaskComponent },\n  { path: 'edittask', component: AddTaskComponent },\n  { path: 'viewtask', component: ViewTaskComponent },\n  { path: 'addproject', component: AddProjectComponent },\n  { path: 'adduser', component: AddUserComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddTaskComponent,\n    ViewTaskComponent,\n    AddProjectComponent,\n    AddUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,DataTableModule,GrowlModule,ConfirmDialogModule,SliderModule,CalendarModule\n  ],\n  providers: [TaskService, ProjectService, UserService, DataTransferService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { Options } from 'selenium-webdriver/chrome';\nimport { environment } from '../../environments/environment';\nimport { Project } from 'src/app/entities/project';\n\n\n@Injectable()\nexport class ProjectService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllProjects(): Observable<Project[]> {\n    return this.http.get<Project[]>(environment.apiUrl+\"/api/project/GetAllProjects\");\n  }\n\n  getProject(projectId: Number): Observable<Project> {\n    return this.http.get<Project>(environment.apiUrl+\"/api/project/GetProject?id=\" + projectId);\n  }\n\n  updateProject(project:Project): Observable<boolean> {\n    return this.http.post<boolean>(environment.apiUrl+\"/api/project/UpdateProject\",project);\n  }\n\n  addProject(project:Project): Observable<boolean> {\n    return this.http.post<boolean>(environment.apiUrl+\"/api/project/AddProject\",project);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { Options } from 'selenium-webdriver/chrome';\nimport { environment } from '../../environments/environment';\nimport { Task, ParentTask } from 'src/app/entities/task';\n\n\n@Injectable()\nexport class TaskService {\n  constructor(private http: HttpClient) {}\n\n  getAllTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(environment.apiUrl+\"/api/task/GetAllTasks\");\n  }\n\n  getTask(taskId: Number, isParent:Boolean): Observable<Task> {\n    return this.http.get<Task>(environment.apiUrl+\"/api/task/GetTask?id=\" + taskId + \"&isParent=\" + isParent);\n  }\n\n  updateTask(task:Task): Observable<boolean> {\n    return this.http.post<boolean>(environment.apiUrl+\"/api/task/UpdateTask\",task);\n  }\n\n  addTask(task:Task): Observable<boolean> {\n    return this.http.post<boolean>(environment.apiUrl+\"/api/task/AddTask\",task);\n  }\n\n  deleteTask(task:Task): Observable<boolean> {\n    return this.http.post<boolean>(environment.apiUrl+\"/api/task/DeleteTask\",task);\n  }\n  \n  endTask(task:Task): Observable<boolean> {\n    return this.http.post<boolean>(environment.apiUrl+\"/api/task/EndTask\",task);\n  }\n\n  getAllTypeOfTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(environment.apiUrl+\"/api/task/GetAllTypeOfTasks\");\n    \n  }\n\n  getAllParentTasks(): Observable<ParentTask[]> {\n    return this.http.get<ParentTask[]>(environment.apiUrl+\"/api/task/getAllParentTasks\");\n    \n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { Options } from 'selenium-webdriver/chrome';\nimport { environment } from '../../environments/environment';\nimport { User } from 'src/app/entities/user';\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllUsers(): Observable<User[]> {\n    return this.http.get<User[]>(environment.apiUrl+\"/api/user/GetAllUsers\");\n  }\n\n  getUser(userId: Number): Observable<User> {\n    return this.http.get<User>(environment.apiUrl+\"/api/user/GetUser?id=\" + userId);\n  }\n\n  updateUser(user:User): Observable<boolean> {\n    return this.http.post<boolean>(environment.apiUrl+\"/api/user/UpdateUser\",user);\n  }\n\n  addUser(user:User): Observable<boolean> {\n    return this.http.post<boolean>(environment.apiUrl+\"/api/user/AddUser\",user);\n  }\n}\n\n","module.exports = \"\\r\\n\"","module.exports = \"<p-growl [(value)]=\\\"msgs\\\" [life]=\\\"3000\\\" [sticky]=\\\"false\\\"></p-growl>\\n\\n<h1 class=\\\"h2\\\">View Task</h1>\\n\\n<p-dataTable [value]=\\\"tasks\\\" class=\\\"table table-striped table-sm\\\">\\n    <p-column  field=\\\"taskId\\\" header=\\\"Task ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n    <p-column  field=\\\"taskName\\\" header=\\\"Task Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n    <p-column  field=\\\"parent.parentTaskName\\\" header=\\\"Parent Task\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n        <ng-template let-col let-task=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span>{{ task.parentId != 0 ? task.parent.parentTaskName : '-'}}</span>\\n        </ng-template>\\n    </p-column>\\n    <p-column field=\\\"priority\\\" header=\\\"Priority\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n        <ng-template let-col let-task=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span>{{ task.parentId != 0 ? task.priority : '-'}}</span>\\n        </ng-template>\\n    </p-column >\\n    <p-column field=\\\"startDate\\\" header=\\\"Start Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n        <ng-template let-col let-task=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n            <span *ngIf=\\\"task.parentId !=0\\\">{{task[col.field]|date:'dd/MM/yyyy'}}</span>\\n        </ng-template>\\n    </p-column >\\n    <p-column field=\\\"endDate\\\" header=\\\"End Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"> \\n      <ng-template let-col let-task=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n        <span *ngIf=\\\"task.parentId !=0\\\" >{{ task[col.field]|date:'dd/MM/yyyy'}}</span>\\n    </ng-template>\\n  </p-column>\\n  <p-column field=\\\"taskId\\\"  [style]=\\\"{ 'width' : '25%' }\\\">\\n      <ng-template let-col let-task=\\\"rowData\\\" pTemplate=\\\"body\\\" >\\n          \\n          <div align=\\\"center\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"editTask(task)\\\"\\n              [disabled]=\\\"!task.status && task.parentId!=0\\\" >Edit</button>\\n              &nbsp;\\n              <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"endTask(task)\\\"\\n              [disabled]=\\\"!task.status\\\">End Task</button>\\n          </div>\\n      </ng-template>\\n  </p-column>\\n</p-dataTable>   \\n\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\" #confirmDialog ></p-confirmDialog>\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/entities/task';\nimport { TaskService } from 'src/app/services/task.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ConfirmationService } from 'primeng/components/common/confirmationservice';\nimport { Message } from 'primeng/components/common/message';\nimport { ConfirmDialog } from 'primeng/confirmdialog';\nimport { DataTransferService } from 'src/shared/data-transfer.service';\n\n\n@Component({\n  selector: 'app-view-task',\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css'],\n  providers: [ TaskService,ConfirmationService, DatePipe]\n})\nexport class ViewTaskComponent implements OnInit {\n  tasks: Task[]=[];\n  errorMessage: any;\n  msgs: Message[] = [];\n\nconstructor\n(\n  private router: Router,\n  private taskService: TaskService,\n  private datePipe: DatePipe,\n  private confirmationService:ConfirmationService,\n  private dataTransferService: DataTransferService   \n ) { }\n\ngetAllTasks()\n{\n  this.taskService.getAllTypeOfTasks()\n  .subscribe(data => {\n    this.tasks = data;\n  },\n  error => {\n    this.errorMessage = <any>error;\n  });\n}\n  ngOnInit() {\n   this.getAllTasks();\n  }\n\n  editTask(task: Task) {\n    this.dataTransferService.task=task;\n    this.router.navigate(['/edittask']);\n    \n} \nendTask(task: Task) {\n\n    this.confirmationService.confirm({\n        message: 'Are you sure that you want to end this task?',\n        accept: () => {\n            this.taskService.endTask(task)\n                .subscribe(data => { \n                  this.showMessage(true, \"Updated Successfully\"); \n                  this.getAllTasks();\n                });\n        }\n    });\n}\n\nshowMessage(status: boolean, message: string) {\n    this.msgs = [];\n    if (status === true) {\n        this.msgs.push({ severity: 'success', summary: \"Success\", detail: message });\n    }\n    else {\n        this.msgs.push({ severity: 'error', summary: \"Error\", detail: message });\n\n    }\n}\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:\"http://localhost:49708\"\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n  \n","import { Injectable } from '@angular/core';\nimport { Task } from 'src/app/entities/task';\n\n\n\n@Injectable()\nexport class DataTransferService {\n\n    public task: Task;\n    constructor() { }\n}"],"sourceRoot":""}